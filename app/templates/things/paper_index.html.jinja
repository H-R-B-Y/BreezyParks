{% extends "nonzeta_template.html.jinja" %}
{% block title %} Paper Notes {% endblock %}
{% block body %}
<div id="main" class="w3-container w3-margin-bottom">
		<!-- Put something in this div to explain what this is and what it does ? maybe lol -->
		<div>
		<h2>Send a paper note.</h2>
		<p>
		For more information please see <a href="/wip">this post.</a></p>
		Since setting this up I have recieved {{ getExtraData("notes_sent") }} notes and read {{ getExtraData("notes_read") }} notes
		</p>
		</div>
		{% set canvas_width, canvas_height, canvas_color = 212, 104, 'black'%}
		{% include "partials/drawable.html.jinja"%}
		<div class="w3-auto" style="width:200px">
			<button id="post_button" class="w3-button my-hover-lilac w3-ripple" onclick="post_paper_note()" style="width:200px"> Post </button>
			<script>
			function print_bin(byte)
			{
				let output = "";
				while (byte)
				{
					output += "" + (byte & 1);
					byte >>= 1;
				}
				while (output.length < 8)
				{
					output = ("" + "0") + output;
				}
				console.log("Byte: ", output.split("").reverse().join(""));
			};
			function pack_bytes(data, width, height) {
					const packed_bytes = [];
					let byte = 0;
					let bit_count = 0;
					for (let y = 0; y < height; y++) {
						for (let x = 0; x < width; x++) {
									const index = ((y * width) + x) * 4;
									const pixel_value = data[index + 3];
									byte = (byte << 1) | (pixel_value == 0 ? 0 : 1);
									bit_count++;
									if (bit_count === 8) {
											packed_bytes.push(byte);
											byte = 0;
											bit_count = 0;
									}
							}
					}
					if (bit_count > 0) { // Push the remaining bits (pad with 0s)
							packed_bytes.push(byte << (8 - bit_count));
					}
					return new Uint8Array(packed_bytes);
			};
			async function async_send ()
			{
				const image_data = ctx.getImageData(0,0, canvas.width, canvas.height);
				const output = await pack_bytes(image_data.data, canvas.width, canvas.height);
				try {
						const response = await fetch("/post_note", {
								method: "POST",
								headers: { "Content-Type": "application/octet-stream",},
								body: output,
						});

						if (!response.ok) {
								throw new Error(`HTTP error! Status: ${response.status}`);
						}

						window.location.href = "/";
				} catch (error) {
						console.error("Error:", error);
				}
			};
			function post_paper_note()
			{
				if (canvas.width != {{canvas_width}} || canvas.height != {{canvas_height}}){return;}
				async_send();
			}
			</script>
		</div>
</div>
{% endblock %}